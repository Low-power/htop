/* Do not edit this file. It was automatically generated. */

#ifndef HEADER_solaris_Platform
#define HEADER_solaris_Platform
/*
htop - solaris/Platform.h
(C) 2014 Hisham H. Muhammad
(C) 2015 David C. Hunt
(C) 2017,2018 Guy M. Broome
Released under the GNU GPL, see the COPYING file
in the source distribution for its full text.
*/

#include "config.h"
#include "Action.h"
#include "BatteryMeter.h"
#include "SignalsPanel.h"
#include <signal.h>
#include <sys/mkdev.h>
#include <sys/proc.h>

#define PLATFORM_SUPPORT_PROCESS_O_STATE
#ifdef HAVE_LIBPROC
// XXX
#define PLATFORM_PRESENT_THREADS_AS_PROCESSES
#endif

#define MAX_VALUE_OF(T) (((size_t)1 << (sizeof(T) * 8 - ((T)-1 == -1))) - 1)

#ifdef HAVE_LIBPROC
#else
#endif

extern const SignalItem Platform_signals[];

extern const unsigned int Platform_numberOfSignals;

#ifdef HAVE_LIBPROC
extern ProcessField Platform_defaultFields[];
#else
extern ProcessField Platform_defaultFields[];
#endif

extern MeterClass* Platform_meterTypes[];

void Platform_setBindings(Htop_Action* keys);

extern const unsigned int Platform_numberOfFields;

int Platform_getUptime();

void Platform_getLoadAverage(double* one, double* five, double* fifteen);

int Platform_getMaxPid();

double Platform_updateCPUValues(Meter *meter, int cpu);

void Platform_updateMemoryValues(Meter *meter);

void Platform_updateSwapValues(Meter *meter);

char **Platform_getProcessArgv(const Process *proc);

#ifdef HAVE_LIBPROC


char **Platform_getProcessEnvv(const Process *proc);

#else

char **Platform_getProcessEnvv(const Process *proc);

#endif

bool Platform_haveSwap();

#endif
