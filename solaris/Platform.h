/* Do not edit this file. It was automatically generated. */

#ifndef HEADER_solaris_Platform
#define HEADER_solaris_Platform
/*
htop - solaris/Platform.h
(C) 2014 Hisham H. Muhammad
(C) 2015 David C. Hunt
(C) 2017,2018 Guy M. Broome
Released under the GNU GPL, see the COPYING file
in the source distribution for its full text.
*/

#ifdef HAVE_LIBPROC
#else
#endif

#include "config.h"
#include "Action.h"
#include "BatteryMeter.h"
#include "SignalsPanel.h"
#include <signal.h>
#include <sys/mkdev.h>
#include <sys/proc.h>

#define PLATFORM_SUPPORT_PROCESS_O_STATE

#define MAX_VALUE_OF(T) (((size_t)1 << (sizeof(T) * 8 - ((T)-1 == -1))) - 1)

extern ProcessFieldData Process_fields[];

extern const SignalItem Platform_signals[];

extern const unsigned int Platform_numberOfSignals;

#ifdef HAVE_LIBPROC
extern ProcessField Platform_defaultFields[];
#else
extern ProcessField Platform_defaultFields[];
#endif

extern MeterClass* Platform_meterTypes[];

void Platform_setBindings(Htop_Action* keys);

extern int Platform_numberOfFields;

int Platform_getUptime();

void Platform_getLoadAverage(double* one, double* five, double* fifteen);

int Platform_getMaxPid();

double Platform_setCPUValues(Meter *meter, int cpu);

void Platform_setMemoryValues(Meter *meter);

void Platform_setSwapValues(Meter *meter);

char **Platform_getProcessArgv(const Process *proc);

#ifdef HAVE_LIBPROC


char **Platform_getProcessEnvv(const Process *proc);

#else

char **Platform_getProcessEnvv(const Process *proc);

#endif

#ifndef HAVE_STRNLEN
size_t strnlen(const char *s, size_t max_len);
#endif

bool Platform_haveSwap();

#endif
