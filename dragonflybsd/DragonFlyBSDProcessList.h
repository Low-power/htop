/* Do not edit this file. It was automatically generated. */

#ifndef HEADER_dragonflybsd_DragonFlyBSDProcessList
#define HEADER_dragonflybsd_DragonFlyBSDProcessList
/*
htop - dragonflybsd/DragonFlyBSDProcessList.h
(C) 2014 Hisham H. Muhammad
(C) 2017 Diederik de Groot
Released under the GNU GPL, see the COPYING file
in the source distribution for its full text.
*/

#include "ProcessList.h"
#include "Hashtable.h"
#include <sys/types.h>
#include <kvm.h>

typedef struct CPUData_ {
   double userPercent;
   double nicePercent;
   double systemPercent;
   double irqPercent;
   double idlePercent;
   double systemAllPercent;
} CPUData;

typedef struct DragonFlyBSDProcessList_ {
   ProcessList super;

   kvm_t* kd;

   unsigned long long int memWire;
   unsigned long long int memActive;
   unsigned long long int memInactive;
   unsigned long long int memFree;

   CPUData* cpus;

   long int *cp_time_o;
   long int *cp_time_n;

   long int *cp_times_o;
   long int *cp_times_n;

   Hashtable *jails;
} DragonFlyBSDProcessList;

#define _UNUSED_ __attribute__((unused))

ProcessList* ProcessList_new(UsersTable* usersTable, const Hashtable *pidWhiteList, uid_t userId);

void ProcessList_delete(ProcessList* this);

void ProcessList_goThroughEntries(ProcessList* this, bool skip_processes);

#endif
