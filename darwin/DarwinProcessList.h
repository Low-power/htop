/* Do not edit this file. It was automatically generated. */

#ifndef HEADER_darwin_DarwinProcessList
#define HEADER_darwin_DarwinProcessList
/*
htop - darwin/DarwinProcessList.h
(C) 2014 Hisham H. Muhammad
Copyright 2015-2022 Rivoreo
Released under the GNU GPL, see the COPYING file
in the source distribution for its full text.
*/


/* compare the given os version with the one installed returns:
0 if equals the installed version
positive value if less than the installed version
negative value if more than the installed version
*/
#include "ProcessList.h"
#include <mach/mach_host.h>
#include <sys/types.h>
#include <sys/sysctl.h>
#include <stdbool.h>
#include <stdint.h>

typedef struct DarwinProcessList_ {
   ProcessList super;

   struct kinfo_proc *kip_buffer;
   size_t kip_buffer_size;
   struct host_basic_info host_info;
   struct vm_statistics vm_stats;
   struct processor_cpu_load_info *prev_load;
   struct processor_cpu_load_info *curr_load;
   uint64_t global_diff;
   bool is_mach_task_info_supported;
} DarwinProcessList;


ProcessList* ProcessList_new(UsersTable* usersTable, const Hashtable *pidWhiteList, uid_t userId);

void ProcessList_delete(ProcessList* this);

void ProcessList_goThroughEntries(ProcessList* super, bool skip_processes);

#endif
